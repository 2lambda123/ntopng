[
    /* Date */
    {name: 'tstamp', data: 'tstamp', className: 'text-center',},
    /* Duration */
    {name: 'duration', data: 'duration', className: 'text-center', orderable: false, render: DataTableRenders.secondsToTime},
    /* Counts */
    {name: 'count', className: 'text-center', data: 'count', visible: false},
    /* Alert Type + Severity */
    {name: 'severity', className: 'text-center text-nowrap', data: 'severity', render: DataTableRenders.alertSeverityAndType},
    /* IP Address */
    {name: 'ip', data: 'ip', orderable: false, render: (ipAddress, type, row) => {
        if (type !== "display") return ipAddress;
    	let html_ref = '';
	if (ipAddress.reference !== undefined)
	   html_ref = ipAddress.reference
	const label = `${ipAddress.label} ${row.is_attacker ? '<i class="fas fa-skull-crossbones"></i>' : ''} ${row.is_victim ? ('<i class="fas fa-sad-tear"></i>' + html_ref): ('' + html_ref)}`;
        return DataTableRenders.filterize(ipAddress.value, label);
    }},
    /* Description */
    {name: 'description', data: 'msg', orderable: false, className: 'text-nowrap'},
]