<div class="row">
    <div class="col-md-12 mb-4">
        <table class="table table-bordered table-striped w-100" id="table-pools">
            <thead>
                <tr>
                    <th>{{ i18n("pools.name") }}</th>
                    <th>{{ i18n("actions") }}</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
        {# Only the admin can use the import/export utilities #}
        {% if isAdministrator() then %}
        <div class="my-2">
            <form action="{{ ntop.getHttpPrefix() }}" method="GET" class="form-inline">
                <button type="submit" class="btn btn-secondary">
                    <i class="fas fa-file-export"></i> {{ i18n('config_scripts.config_export') }}
                </button>
            </form>
            <button id="import-modal-btn" data-toggle="modal" data-target="#import-modal" class="btn btn-secondary">
                <i class="fas fa-file-import"></i> {{ i18n('config_scripts.config_import') }}
            </button>
        </div>
        {% end %}
    </div>
</div>

{# include import modal only for admin users #}

{% if isAdministrator() then %}
{* template.gen("import_modal.html", {
    dialog = {
        id = "import-modal",
        title = i18n("pools.config_import"),
        label = "",
        message = i18n("pools.config_import_message"),
        cancel = i18n("cancel"),
        apply = i18n("import")
    }
}) *}
{% end %}

{# include the modal to add a new pool #}
{* template_utils.gen("pages/modals/pools/pool_modal.template", {
    modal_type = "add",
    pool = pool
}) *}
{# include the modal to edit an existing pool #}
{* template_utils.gen("pages/modals/pools/pool_modal.template", {
    modal_type = "edit",
    pool = pool
}) *}
{* template_utils.gen("pages/modals/pools/remove_pool.template", {
    modal_type = "remove",
    pool = pool
}) *}


<link href="{{ ntop.getHttpPrefix() }}/datatables/datatables.min.css" rel="stylesheet"/>
<script type="text/javascript">

    let addCsrf = "{{ ntop.getRandomCSRFValue() }}";
    let editCsrf = "{{ ntop.getRandomCSRFValue() }}";
    let removeCsrf = "{{ ntop.getRandomCSRFValue() }}";
    let importCsrf = "{{ ntop.getRandomCSRFValue() }}";

    const all_members = {* json.encode(pool.all_members) *};
    const endpoints = {* json.encode(pool.endpoints) *};
    Object.freeze(all_members);
    Object.freeze(endpoints);

    i18n.warning ="{{ i18n('warning', {}) }}";
    i18n.showing_x_to_y_rows = "{{ i18n('showing_x_to_y_rows', {x='_START_', y='_END_', tot='_TOTAL_'}) }}";
    i18n.search = "{{ i18n('search') }}";
    i18n.delete = "{{ i18n('delete') }}";
    i18n.edit = "{{ i18n('edit') }}";
    i18n.all = "{{ i18n('all') }}";
    i18n.used_by = "{{ i18n('used_by') }}";

    i18n.rest = {
        INVALID_HOST: "{{ i18n('rest_consts.INVALID_HOST') }}",
        INVALID_ARGUMENTS: "{{ i18n('rest_consts.INVALID_ARGUMENTS') }}",
        NOT_GRANTED: "{{ i18n('rest_consts.NOT_GRANTED') }}",
        ADD_POOL_FAILED: "{{ i18n('rest_consts.ADD_POOL_FAILED') }}",
        EDIT_POOL_FAILED: "{{ i18n('rest_consts.ADD_POOL_FAILED') }}",
        DELETE_POOL_FAILED: "{{ i18n('rest_consts.ADD_POOL_FAILED') }}",
    };

</script>
<script type="text/javascript" src="{{ ntop.getHttpPrefix() }}/js/pages/pools/pools.js"></script>
