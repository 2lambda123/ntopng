[
    /* Date */
    {responsivePriority: 1, name: 'tstamp', data: 'tstamp', width: '12%', className: 'text-center', render: DataTableRenders.formatValueLabel, createdCell: DataTableRenders.applyCellStyle },
    /* Application */
    {name: 'l7_proto', data: 'l7_proto', orderable: false, className: 'text-center', width: '5%', render: (proto, type, row) => {
        if (type !== "display") return proto.value;
	return DataTableRenders.filterize('l7_proto', proto.value, proto.label);
    }},
    /* Flow */
    {responsivePriority: 1, name: 'flow', data: 'flow', orderable: false, className: 'text-nowrap', width: '12%', render: (flow, type, row) => {

        let active_ref = (flow.active_url ? `<a href="${flow.active_url}"><i class="fas fa-stream"></i></a>` : "");
        let historical_ref = (flow.historical_url ? `<a href="${flow.historical_url}"><i class="fas fa-search-plus"></i></a>` : "");

        let cliLabel = DataTableRenders.filterize('cli_ip', flow.cli_ip.value, flow.cli_ip.label); 
        let cliPortLabel = ((flow.cli_port && flow.cli_port > 0) ? ":"+DataTableRenders.filterize('cli_port', flow.cli_port, flow.cli_port) : "");
        let cliIcons = (row.is_attacker_to_victim ? "<i class='fas fa-skull-crossbones'></i>" : "");

        let srvLabel = DataTableRenders.filterize('srv_ip', flow.srv_ip.value, flow.srv_ip.label);
        let srvPortLabel = ((flow.cli_port && flow.cli_port > 0) ? ":"+DataTableRenders.filterize('srv_port', flow.srv_port, flow.srv_port) : "");
        let srvIcons = (row.is_victim_to_attacker ? "<i class='fas fa-skull-crossbones'></i>" : "");

        return `${active_ref} ${historical_ref} ${cliLabel}${cliPortLabel} ${cliIcons} ${flow.cli_ip.reference} <i class="fas fa-exchange-alt fa-lg" aria-hidden="true"></i> ${srvLabel}${srvPortLabel} ${srvIcons} ${flow.srv_ip.reference}`;
    }},
    /* Description */
    {responsivePriority: 1, name: 'description', data: 'msg', orderable: false, className: 'text-nowrap',},
    /* Score */
    {name: 'score', data: 'score', className: 'text-center', width: '3%', render: DataTableRenders.formatValueLabel},
    /* Counts */
    {name: 'count', className: 'text-center', width: '3%', data: 'count', visible: false},
]
